group 'com.school.platform'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: 'docker'
apply plugin: "io.spring.dependency-management"

jar {
    baseName = 'course-service-gateway'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        // Can't find spring-cloud-build in maven central...
        url 'http://maven.springframework.org/release'
    }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "http://packages.confluent.io/maven" }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Finchley.RC1'
//        mavenBom 'org.springframework.cloud:spring-cloud-netflix:1.3.1.RELEASE'
    }
}

dependencies {
//    compile("org.springframework.cloud:spring-cloud-starter-zuul")
    compile("org.springframework.cloud:spring-cloud-starter-netflix-zuul")
//    compile "com.netflix.zuul:zuul-core:2.1.1"

//    compile("org.springframework.cloud:spring-cloud-starter-feign")
    compile("org.springframework.cloud:spring-cloud-starter-openfeign")

//    compile("org.springframework.cloud:spring-cloud-starter-eureka")
    compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")

//    compile("org.springframework.cloud:spring-cloud-starter-ribbon")
    compile("org.springframework.cloud:spring-cloud-starter-netflix-ribbon")

//    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '1.5.4.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.0.1.RELEASE'

    compile("org.springframework.boot:spring-boot-starter-security")
//    compile("org.springframework.security.oauth:spring-security-oauth2")
    compile("org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure")

    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2")
    runtime("mysql:mysql-connector-java")

    compile group: 'org.springframework.data', name: 'spring-data-redis'
    compile group: 'redis.clients', name: 'jedis', version: '2.9.0'

//    compile group: 'com.typesafe.akka', name: 'akka-actor_2.12', version: '2.5.11'

    compileOnly 'org.projectlombok:lombok:1.16.20'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': project.group + '.Main'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

distDocker {
    exposePort 7070
    setEnvironment 'JAVA_OPTS', '-Dspring.profiles.active=docker'
    description 'Central config cluster'
}

docker {
    group = 'coursemnt'
    maintainer = 'Someone <someone@gmail.com>'
    baseImage = 'java:8'
}

// gradle buildDocker -Ppush
task buildDocker(type: Docker, dependsOn: build) {
    push = project.hasProperty('push')
    addFile {
        from jar
        rename {'app.jar'}
    }
    setEnvironment('_JAVA_OPTIONS','-Dspring.profiles.active=docker')
    defaultCommand(['java', '-jar', 'app.jar'])
}
