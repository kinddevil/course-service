group 'com.school.platform'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
        springCloudVersion = 'Finchley.RC1'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
        classpath "se.transmode.gradle:gradle-docker:1.2"
//        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
apply plugin: "io.spring.dependency-management"
//apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'
mainClassName = 'com.discovery.DiscoveryApplication'

jar {
    baseName = 'course-service-discovery'
    version = '0.0.1-SNAPSHOT'
    enabled = true
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        // Can't find spring-cloud-build in maven central...
        url 'http://maven.springframework.org/release'
    }
    maven { url "https://repo.spring.io/libs-milestone" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "http://packages.confluent.io/maven" }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-netflix:2.0.0.RC1'
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Finchley.RC1'
//        mavenBom 'org.springframework.cloud:spring-cloud-build:2.0.0.RELEASE'
    }
}

dependencies {
//    compile("org.springframework.cloud:spring-cloud-starter-eureka-server")
    compile("org.springframework.cloud:spring-cloud-starter-config")
    compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
    compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server")
//    compileOnly 'org.projectlombok:lombok:1.16.20'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': project.group + '.Main'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

distDocker {
    exposePort 8761
    setEnvironment 'JAVA_OPTS', '-Dspring.profiles.active=docker'
    description 'Central config cluster'
}

docker {
    group = 'coursemnt'
    maintainer = 'David <david@gmail.com>'
    baseImage = 'java:8'
}

//println  "Root project:   ${project.rootProject}";
//println  "rootDir:      ${project.rootDir}"
//println  "projectDir:   ${project.projectDir}";
//println  "project dir:  ${System.getProperty("user.dir")}";

task buildDocker(type: Docker, dependsOn: build) {
    push = project.hasProperty('push')
//    addFile {
//        from jar
//        rename {'app.jar'}
//    }
    addFile("${project.projectDir}/build/libs/${project.name}-${version}.jar", "app.jar")
    setEnvironment('_JAVA_OPTIONS','-Dspring.profiles.active=docker')
    defaultCommand(['java', '-jar', 'app.jar'])
}